version: '3.8'

services:
  # frontend-service:
  #   build: ./frontend-service
  #   ports:
  #     - "80:80"
  #   depends_on:
  #     - api-gateway
  #   networks:
  #     - app-network
  
  frontend-service:
    build: ./frontend-service
    ports:
      - "3000:3000"  # React development server port
    depends_on:
      - api-gateway
    volumes:
      - ./frontend-service:/app  # For hot reloading during development
      - /app/node_modules  # Don't override the node_modules directory
    networks:
      - app-network
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api  # For development
      - CHOKIDAR_USEPOLLING=true  # This helps with hot reloading in some environments

  api-gateway:
    build: ./api-gateway
    ports:
      - "5000:5000"
    depends_on:
      - user-service
      - auth-service
    # Wait for the database to be ready before starting the service
    command: ["./wait-for-db.sh", "database-service", "python", "app.py"]
    volumes:
      - ./wait-for-db.sh:/app/wait-for-db.sh
      
    environment:
      - USER_SERVICE_URL=http://localhost:5000/api
      - AUTH_SERVICE_URL=http://auth-service:5002
      - TUTORIAL_SERVICE_URL=http://tutorial-service:5003
      - CONTAINER_SERVICE_URL=http://container-service:5004
    networks:
      - app-network

  user-service:
    build: ./user-service
    ports:
      - "5001:5001"
    depends_on:
      - database-service
    # Wait for the database to be ready before starting the service
    command: ["./wait-for-db.sh", "database-service", "python", "app.py"]
    volumes:
      - ./wait-for-db.sh:/app/wait-for-db.sh

    environment:
      - DATABASE_URL=mysql+pymysql://root:password@database-service:3306/users_db
    networks:
      - app-network

  auth-service:
    build: ./auth-service
    ports:
      - "5002:5002"
    depends_on:
      - database-service
    # Wait for the database to be ready before starting the service
    command: ["./wait-for-db.sh", "database-service", "python", "app.py"]
    volumes:
      - ./wait-for-db.sh:/app/wait-for-db.sh

    environment:
      - DATABASE_URL=mysql+pymysql://root:password@database-service:3306/auth_db
      - SECRET_KEY=do-do-with-love-or-dont-do-at-all
    networks:
      - app-network

  database-service:
    build: ./database-service
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

<<<<<<< HEAD










  container-service:
    build: ./container-service
    ports:
      - "5004:5004"
    depends_on:
      - database-service
    privileged: true  
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - SECRET_KEY=do-do-with-love-or-dont-do-at-all
=======
  tutorial-service:
    build: ./tutorial-service
    ports:
      - "5003:5003"
    depends_on:
      - database-service
    command: ["./wait-for-db.sh", "database-service", "python", "app.py"]
    volumes:
      - ./wait-for-db.sh:/app/wait-for-db.sh
    environment:
      - DATABASE_URL=mysql+pymysql://root:password@database-service:3306/tutorials_db
      - SECRET_KEY=your-secret-key-should-be-very-long-and-secure
>>>>>>> feature/tutorial-service
    networks:
      - app-network



<<<<<<< HEAD
=======


>>>>>>> feature/tutorial-service
networks:
  app-network:
    driver: bridge

volumes:
  mysql-data: